<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAHgAAADIAAABSAAAAUgAAAFIAAABSAAAAUgAAAFIAAABSAAAAUgAAAFIAAABSAAAAUgAA
        AFIAAABSAAAAUgAAAFIAAABSAAAAUgAAAFIAAABSAAAAUgAAAFIAAABSAAAAUgAAAFIAAABSAAAAMgAA
        AB4AAAAAAAAAAAAAAAAAAAAAAAAAAB0fILcfICH/HyAh/x8gIf8fICH/Wpm6/1qZuv9ambr/Wpm6/1qZ
        uv9ambr/Wpm6/1qZuv9ambr/Wpm6/1qZuv9ambr/Wpm6/1qZuv9ambr/Wpm6/1qZuv9ambr/Wpm6/2Cf
        wYMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFxod+ykpKv9BQUj/HBwc/ykpKv9uq87/ebji/3m4
        4v95uOL/ebji/3m44v95uOL/ebji/3m44v95uOL/ebji/3m44v95uOL/ebji/3m44v95uOL/ebji/3m4
        4v95uOL/Wpm6/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIXGRv9KSkr/0JCSP8cHBz/KSkr/2qo
        zP9sqsv/bKrL/2yqy/9sqsv/bKrL/2yqy/9sqsv/bKrL/2yqy/9sqsv/bKrL/2yqy/9sqsv/bKrL/2yq
        y/9sqsv/bKrL/3Ow1P9ambr/vLy8TLy8vCwAAAAAAAAAAAAAAAAAAAAAAAAAAhcZG/0qKiz/QkJJ/xwc
        Hf8pKSv/aafL/3Kw1P9ysNT/crDU/3Kw1P9ysNT/crDU/3Kw1P9ysNT/crDU/3Kw1P9ysNT/crDU/3Kw
        1P9ysNT/b6zP/2yqy/9sqsv/c7HV/1qZuv+tra3/ra2t/wAAAAAAAAAAAAAAAAAAAAAAAAACFxgb/Soq
        Lf9DQ0n/HBwd/yoqLP9op8v/crDU/3Kw1P9ysNT/crDU/3Kw1P9ysNT/crDU/3Kw1P9ysNT/crDU/3Kw
        1P9ysNT/crDU/3Kw1P9ysNT/cK3Q/2yqy/90sdX/Wpm6/7y8vP+tra3/AAAAAAAAAAAAAAAAAAAAAAAA
        AAIYGRv9Kysu/0NES/8cHB3/Kiot/2emyv9ysNT/bKjL/2yoy/9sqMv/bKjL/2yoy/9sqMv/bKjL/2yo
        y/9sqMv/bKjL/2yoy/9sqMv/bKjL/2yoy/9sqMv/bKrL/3Wx1f9ambr/vLy8/62trf8AAAAAAAAAAAAA
        AAAAAAAAAAAAAhgaHP0tLC//RERM/x0dHf8tLC//ZqXJ/3Kw1P9tqsv/barL/22qy/9tqsv/barL/22q
        y/9tqsv/barL/22qy/9tqsv/barL/22qy/9tqsv/barL/22qy/9sqsv/drHV/1qZuv+8vLz/ra2t/wAA
        AAAAAAAAAAAAAAAAAAAAAAACGBkc/S0tMP9EREz/HR0d/y0tMP9mpsj/crDU/26qy/9uqsv/bqrL/26q
        y/9uqsv/bqrL/26qy/9uqsv/bqrL/26qy/9uqsv/bqrL/26qy/9uqsv/bqrL/2yqy/94stX/Wpm6/62t
        rf+tra3/AAAAAAAAAAAAAAAAAAAAAAAAAAIZGx39Li4x/0VFTP8dHR3/Li4w/2Wlx/9ysNT/b6vM/2+r
        zP9vq8z/b6vM/2+rzP9vq8z/b6vM/2+rzP9vq8z/b6vM/2+rzP9vq8z/b6vM/2+rzP9vq8z/bKrL/3mz
        1v9ambr/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhocHf0wLzP/RkdO/x0dHf8uLjL/ZKLG/3Kw
        1P9vqs3/b6rN/2+qzf9rosL/ZZSv/2KOp/9ijqf/Yo6n/2KOp/9llbD/bKPE/2+qzf9vqs3/b6rN/2+q
        zf9sqMv/erLW/1qZuv+tra3/ra2t/wAAAAAAAAAAAAAAAAAAAAAAAAACGhsd/TAwM/9GRk7/HR0d/y8w
        NP9ko8X/crDU/3Cqzf9wqs3/b6nL/2yYsP/z8/T/8/P0//Pz9P/z8/T/8/P0//Pz9P9mlbD/cKrN/3Cq
        zf9wqs3/cKrN/22qy/98s9f/Wpm6/7y8vP+tra3/AAAAAAAAAAAAAAAAAAAAAAAAAAIaGx79MTE1/0dI
        T/8dHR7/MTE1/2OixP9ysNT/cavO/3Grzv9wqsz/a5Oq//Pz9P/z8/T/8/P0//Pz9P/z8/T/8/P0/2SP
        qP9xq87/cavO/3Grzv9xq87/barL/3201/9ambr/vLy8/62trf8AAAAAAAAAAAAAAAAAAAAAAAAAAhsc
        Hv0yMjX/SEhQ/x0dHv8yMjX/YqHD/3Kw1P9yrs//cq7P/3Ktzv9kkKf/8/P0//Pz9P/z8/T/8/P0//Pz
        9P/z8/T/ZJKp/3Kuz/9yrs//cq7P/3Kuz/9tq8z/fbLX/1qZuv+8vLz/ra2t/wAAAAAAAAAAAAAAAAAA
        AAAAAAACGxwe/TQ0N/9JSVH/HR0e/zMzNv9hoML/crDU/3Ksz/9vpsf/aZq2/1t9jv/z8/T/8/P0//Pz
        9P/z8/T/8/P0//Pz9P9afI3/aJi0/26kxP9xrM7/cq3Q/22pzP9/s9f/Wpm6/62trf+tra3/AAAAAAAA
        AAAAAAAAAAAAAAAAAAIcHh/9NTU4/0pKUv8eHh//NDQ4/2Cfwf9zsdX/canL/3Casf/S2Nz/8/P0//Pz
        9P/z8/T/8/P0//Pz9P/z8/T/8/P0//Pz9P/f4+X/e56x/3Cnx/9zrtH/bqrN/4G02P9ambr/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAhweH/02NTr/S0xU/x4eH/81NTn/YJ/B/3Sx1f9wo8L/p7fA//Pz
        9P/z8/T/8/P0//Pz9P/z8/T/8/P0//Pz9P/z8/T/8/P0//Pz9P+5xMr/bp+9/3Wu0f9vqs3/g7XZ/1qZ
        uv+tra3/ra2t/wAAAAAAAAAAAAAAAAAAAAAAAAACHB0f/TY2O/9LTFX/Hh4f/zY3O/9fnsD/dbLW/3Ck
        w/+nt8D/8/P0//Pz9P/z8/T/8/P0//Pz9P/z8/T/8/P0//Pz9P/z8/T/8/P0/7bBx/9voL7/dq/S/3Cr
        zv+Fttn/Wpm6/7y8vP+tra3/AAAAAAAAAAAAAAAAAAAAAAAAAAIdHiD9Nzc8/0xNVv8fHyD/Nzc8/16d
        v/92stb/dKvM/3Wcsv/c4OP/8/P0//Pz9P/z8/T/8/P0//Pz9P/z8/T/8/P0//Pz9P/s7e//fp6w/3Sp
        yf93sNP/cazP/4e32v9ambr/vLy8/62trf8AAAAAAAAAAAAAAAAAAAAAAAAAAh0fIf05OT3/TU5X/x8f
        IP84OD3/Xp2//3ey1v94sNP/dKnK/22atf+AoLP/b4mX//Pz9P/z8/T/8/P0//Hy8/91jJn/kam3/3ac
        s/9zpsb/d7DS/3ix1P9yr9D/ibja/1qZuv+8vLz/ra2t/wAAAAAAAAAAAAAAAAAAAAAAAAACHR4h/To6
        P/9NTlf/Hx8g/zk5P/9dnL7/eLLW/3my1f95stX/eLHT/3eu0P9wn7v/tsLJ/+/w8f/s7e//r73F/2+e
        uv92q8z/d67Q/3mx1P95stX/ebLV/3Ku0f+KuNv/Wpm6/62trf+tra3/AAAAAAAAAAAAAAAAAAAAAAAA
        AAIdHiL9OztA/05OWP8fHyH/OjpA/1ycvv96s9b/erLV/3qy1f96stX/erLV/3iuz/9yob7/cpqz/2+a
        s/9zo8H/eK7P/3qy1f96stX/erLV/3qy1f96stX/da/S/4y42/9ambr/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAh4fIv08PEH/T1BZ/x8fIf87O0H/W5u9/3u01/96stb/erLW/3qy1v96stb/erLW/3qy
        1v96sdX/erHV/3qy1v96stb/erLW/3qy1v96stb/erLW/3qy1v92sdT/jrnb/1qZuv+tra3/ra2t/wAA
        AAAAAAAAAAAAAAAAAAAAAAACHh8j/T08Qv9PUFn/ICAh/zw8Qv9bmrz/fLTX/3uy1v97stb/e7LW/3uy
        1v97stb/e7LW/3uy1v97stb/e7LW/3uy1v97stb/e7LW/3uy1v97stb/e7LW/3iy1f+Qutz/Wpm6/7y8
        vP+tra3/AAAAAAAAAAAAAAAAAAAAAAAAAAIfICP9Pj5D/1BQWv8gISL/PT1D/1qavP99ttj/fLPX/3yz
        1/98s9f/fLPX/3yz1/98s9f/fLPX/3yz1/98s9f/fLPX/3yz1/98s9f/fLPX/3yz1/98s9f/erPW/5G5
        3P9ambr/vLy8/62trf8AAAAAAAAAAAAAAAAAAAAAAAAAAh8hJP0+P0T/UFFa/yAgIv8/QET/Wpm7/321
        2P99tdj/fbXY/3212P99tdj/fbXY/3212P99tdj/fbXY/3212P99tdj/fbXY/3212P99tdj/fbXY/321
        2P98tNf/k7vd/1qZuv+8vLz/ra2t/wAAAAAAAAAAAAAAAAAAAAAAAAACHyAk/UBARf9RUlv/ICAi/0BA
        Rf9ambv/fbTY/3202P99tNj/fbTY/3202P99tNj/fbTY/3202P99tNj/fbTY/3202P99tNj/fbTY/320
        2P99tNj/fbTY/3202P+VvN3/Wpm6/62trf+tra3/AAAAAAAAAAAAAAAAAAAAAGNvgQYfISX9QEBG/1FT
        XP8hISL/QEBG/1mYuv9+ttn/f7Xa/4G32/+Dt9v/hLjc/4W43P+Gud3/h7nd/4e53f+Hud3/hrnd/4W4
        3P+EuNz/grbb/4G32/9/tdr/frbZ/5W73f9ambr/vLy8PLy8vBgAAAAAAAAAAAAAAAAAAAAAKzA4BCIj
        Jv9RUVv/Z2dz/yEhI/9nZ3P/nr3f/5+93/+fvd//oL7g/6C+4P+gvuD/oL7g/6HA4P+hv+H/ob/h/6G/
        4f+hwOD/oL7g/6C+4P+gvuD/oL7g/5+93/+fvd//0drn/2WfwPsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAIiUp/RcXF/8XFxf/FxcX/xcXF/9kn8D/ZJ/A/2SfwP9kn8D/ZJ/A/2SfwP9kn8D/ZJ/A/2Sf
        wP9kn8D/ZJ/A/2SfwP9kn8D/ZJ/A/2SfwP9kn8D/ZJ/A/2SfwP9kn8D/grPS7wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAoKCjhOztA/2pqbf90dHP/nZ2d/6Woqf+rsbP/ws3T/8LN0//CzdP/ws3T/8LN
        0//CzdP/ws3T/8LN0//CzdP/ws3T/8LN0//CzdP/ws3T/8LN0//CzdP/ws3T/2ubtP+Ju94MAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABcXFyAqKyzdOztA/zs7QP87O0D/OztA/zs7QP9ombH/aJmx/2iZ
        sf9ombH/aJmx/2iZsf9ombH/aJmx/2iZsf9ombH/aJmx/2iZsf9ombH/aJmx/2iZsf9ombH/aJmxmwAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////+AAAA/gAAAP4AAAD+AAAAPgAAAD4AAAA+AAAAPgAAAD4AAAD+AA
        AAPgAAAD4AAAA+AAAAPgAAAD4AAAD+AAAAPgAAAD4AAAA+AAAAPgAAAD4AAAD+AAAAPgAAAD4AAAA+AA
        AAPgAAAD4AAAD+AAAA/gAAAP4AAAH/AAAB8=
</value>
  </data>
</root>